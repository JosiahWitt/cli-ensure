// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/JosiahWitt/ensure-cli/internal/mockgen (interfaces: MockGenerator)

// Package mock_mockgen is a generated GoMock package.
package mock_mockgen

import (
	context "context"
	reflect "reflect"

	ensurefile "github.com/JosiahWitt/ensure-cli/internal/ensurefile"
	gomock "github.com/golang/mock/gomock"
)

// MockMockGenerator is a mock of MockGenerator interface.
type MockMockGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockMockGeneratorMockRecorder
}

// MockMockGeneratorMockRecorder is the mock recorder for MockMockGenerator.
type MockMockGeneratorMockRecorder struct {
	mock *MockMockGenerator
}

// NewMockMockGenerator creates a new mock instance.
func NewMockMockGenerator(ctrl *gomock.Controller) *MockMockGenerator {
	mock := &MockMockGenerator{ctrl: ctrl}
	mock.recorder = &MockMockGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMockGenerator) EXPECT() *MockMockGeneratorMockRecorder {
	return m.recorder
}

// GenerateMocks mocks base method.
func (m *MockMockGenerator) GenerateMocks(arg0 context.Context, arg1 *ensurefile.Config) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateMocks", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GenerateMocks indicates an expected call of GenerateMocks.
func (mr *MockMockGeneratorMockRecorder) GenerateMocks(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateMocks", reflect.TypeOf((*MockMockGenerator)(nil).GenerateMocks), arg0, arg1)
}

// TidyMocks mocks base method.
func (m *MockMockGenerator) TidyMocks(arg0 *ensurefile.Config) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TidyMocks", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// TidyMocks indicates an expected call of TidyMocks.
func (mr *MockMockGeneratorMockRecorder) TidyMocks(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TidyMocks", reflect.TypeOf((*MockMockGenerator)(nil).TidyMocks), arg0)
}

// NEW creates a MockMockGenerator.
func (*MockMockGenerator) NEW(ctrl *gomock.Controller) *MockMockGenerator {
	return NewMockMockGenerator(ctrl)
}
